# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: Optional[ListNode]
        :type l2: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        st_l1 = []
        st_l2 = []

        current_l1 = l1
        current_l2 = l2

        while current_l1:
            st_l1.append(current_l1.val)
            current_l1 = current_l1.next
        
        while current_l2:
            st_l2.append(current_l2.val)
            current_l2 = current_l2.next
        
        result_node = ListNode(0)
        res = result_node
        carry = 0

        while st_l1 or st_l2 or carry:
            if st_l1:
                st_val1 = st_l1.pop()
            else:
                st_val1 = 0
            if st_l2:
                st_val2 = st_l2.pop()
            else:
                st_val2 = 0
            total = st_val1 + st_val2 + carry
            carry = total / 10
            new_total = total % 10

            new_node = ListNode(new_total)
            new_node.next = result_node.next
            result_node.next = new_node
        return res.next
