class Solution:
    def minimizeMax(self, nums: List[int], p: int) -> int:
        nums.sort()

        def can_be_pairs(max_diff:int) -> bool:
            count = 0
            i = 0

            while i<len(nums)-1:
                diff = nums[i+1] - nums[i]
                if diff <= max_diff:
                    count += 1
                    i +=2
                else:
                    i += 1
            return count >= p
        
        #Binary Search
        left, right = 0, nums[-1] - nums[0]

        while(left<right):
            mid = (left+right) // 2
            if can_be_pairs(mid):
                right = mid
            else:
                left = mid+1
        
        return left
