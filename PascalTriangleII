class Solution {
    public List<Integer> getRow(int rowIndex) {
        // List<Integer> result = new ArrayList<>();
        // result.add(1);
        // for(int i = 1; i<=rowIndex;i++){
        //     long sum = (long) result.get(i-1)*(rowIndex - i +1)/i;
        //     result.add((int) sum);
        // }

        // return result;
        List<List<Integer>> pascalTriangle = new ArrayList<>();
        for(int i = 0; i<=rowIndex; i++){
            List<Integer> curr = new ArrayList<>();

            curr.add(1);
            if(i>0){
            List<Integer> prevRow = pascalTriangle.get(i-1);

            for(int j = 1; j <prevRow.size(); j++){
                int sum = prevRow.get(j) + prevRow.get(j-1);
                curr.add(sum);
            }
            curr.add(1);
        }
        pascalTriangle.add(curr); 
        }

    return pascalTriangle.get(rowIndex);  
    }
    
    
    
}
