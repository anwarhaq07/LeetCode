class Solution {
    public String longestNiceSubstring(String s) {
        
        if (s == null || s.length()<2){
            return "";
        }
        
        int startIndex = 0;
        int maxLength = 0;

        for(int i = 0; i<s.length(); i++){
            for (int j = i; j<=s.length(); j++){
                String substr = s.substring(i, j);
                if(isNice(substr) && substr.length()>maxLength){

                    maxLength = substr.length();
                    startIndex = i;
                }
            }
        }

        return maxLength > 0 ? s.substring(startIndex, startIndex + maxLength) : "";
    }

    private static boolean isNice(String substr){
        int [] lower = new int[26];
        int [] upper = new int[26];

        for (char c : substr.toCharArray()){
            
            if (Character.isLowerCase(c)){
                lower[c  - 'a']++;
            }
            if(Character.isUpperCase(c)){
                upper[c-'A']++;
            }
        }
        for (char c: substr.toCharArray()){
            if(Character.isLowerCase(c) && upper[c-'a'] == 0) return false;
            if(Character.isUpperCase(c) && lower[c-'A'] == 0) return false;
        }
        return true;
    }
}
