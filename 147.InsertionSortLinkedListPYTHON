# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def insertionSortList(self, head):
        """
        :type head: Optional[ListNode]
        :rtype: Optional[ListNode]
        """
        if not head:
            return head
        
        arr = []
        current = head

        while current:
            arr.append(current.val)
            current = current.next
        
        i = 0
        
        for i in range(len(arr)-1):
            min = i
            for j in range(i+1, len(arr)):
                if arr[min] > arr[j]:
                    min = j
            temp = arr[i]
            arr[i] = arr[min]
            arr[min] = temp
            i += 1

        current = head = ListNode(0)
        for val in arr:
            current.next = ListNode(val)
            current = current.next
        return head.next
