class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> result = new ArrayList<>();
        dfs(0, 0, "", n, result);
        return result;
    }
    private void dfs (int open, int close, String s, int n, List<String> result){
        if( open == close && open+close == 2*n){
            result.add(s);
            return;
        }
        if(open<n){
            dfs(open+1,close,s+"(",n,result);
        }
        if(close<open){
            dfs(open, close+1, s+")", n,result);
        }
    }
}
