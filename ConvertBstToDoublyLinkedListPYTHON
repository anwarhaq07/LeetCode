"""
# Definition for a Node.
class Node:
    def __init__(self, val, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
"""

class Solution:
    def treeToDoublyList(self, root: 'Optional[Node]') -> 'Optional[Node]':
        if not root:
            return None
        
        #Inorder traversal
        def inorder(node):
            nonlocal prev, head
            if not node:
                return None
            inorder(node.left)
            if prev:
                prev.right = node
                node.left = prev
            else:
                head = node
            prev = node
            inorder(node.right)
        
        prev, head = None, None
        inorder(root)

        head.left = prev
        prev.right = head
        return head
